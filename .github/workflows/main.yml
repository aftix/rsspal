name: main

on:
  push:
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

permissions:
  checks: write

jobs:
  build:
    name: Build rsspal
    strategy:
      matrix:
        profile: [dev, release]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Build
        uses: clechasseur/rs-cargo@v1
        with:
          command: build
          args: --profile ${{ matrix.profile }} --target x86_64-unknown-linux-gnu
  
      - name: Store binary
        uses: actions/upload-artifact@v3
        with:
          name: rsspal-${{ matrix.profile }}
          path: target/${{ matrix.profile }}/rsspal

  clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        uses: auguwu/clippy-action@1.2.2
        with:
          all-features: true
          deny: warnings
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Cargo nextest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-nextest
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-nextest

      - name: Run tests
        uses: clechasseur/rs-cargo@v1
        with:
          command: nextest
          args: run

  deploy:
    name: Deploy rsspal
    runs-on: ubuntu-latest
    needs: [test, clippy, build]
    concurrency:
      group: deploy
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: rsspal-release

      - name: Get ssh key from secrets
        run: install -m 600 -D /dev/stdin $HOME/.ssh/id_ed25519 <<< "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Add known hosts to .ssh directory
        run: |
          ssh-keyscan -H "${{ secrets.SERVER }}" > $HOME/.ssh/known_hosts

      - name: Make discord token file
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > rsspal-creds

      - name: Copy files to host
        run: |
          scp rsspal.service rsspal-release rsspal-creds ${{ secrets.USER }}@${{ secrets.SERVER }}:~

      - name: Create installation script
        run: |
          cat > install_rsspal.sh <<EOF
          mv '$HOME/rsspal-creds' /root
          systemctl disable --now rsspal.service || true
          install -D -T '$HOME/rsspal-release' /usr/local/bin/rsspal
          install -D -m 644 '$HOME/rsspal.service' /usr/lib/systemd/system
          systemctl daemon-reload
          systemctl enable --now rsspal.service
          EOF

      - name: Install rsspal on host
        run: |
          ssh "${{ secrets.USER }}@${{ secrets.HOST }}" 'sudo sh -ls' < install_rsspal.sh
